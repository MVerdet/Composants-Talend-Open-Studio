<%@ jet 
imports="
		org.talend.designer.codegen.config.CodeGeneratorArgument
		org.talend.core.model.process.INode
		org.talend.core.model.process.ElementParameterParser  
" 
%>

<%
    CodeGeneratorArgument codeGenArgument = (CodeGeneratorArgument) argument;
    INode node = (INode)codeGenArgument.getArgument();

    String cid = node.getUniqueName();
    
    String dbType = ElementParameterParser.getValue(node,"__DBTYPE__");

    String connection = ElementParameterParser.getValue(node,"__CONNECTION_" + dbType + "__");
    
    String conn = "conn_" + connection;
    
    String schema = "dbschema_" + connection;
    
    String tableName = ElementParameterParser.getValue(node,"__TABLE_NAME__");
%>
java.sql.Connection conn_<%=cid%> = (java.sql.Connection)globalMap.get("<%=conn%>");
String tableName_<%=cid%> = <%=tableName%>;
<%
	if(("MSSQL").equals(dbType)){
%>
String dbschema_<%=cid%> = (String)globalMap.get("<%=schema%>");

if(dbschema_<%=cid%> != null && dbschema_<%=cid%>.trim().length() > 0){
	tableName_<%=cid%> = "[" + dbschema_<%=cid%> + "].[" + tableName_<%=cid%> + "]";
}else{
	tableName_<%=cid%> = "[" + tableName_<%=cid%> + "]";
}
<%
	}else if(("DBORACLE").equals(dbType)){
%>
String dbschema_<%=cid%> = (String)globalMap.get("<%=schema%>");

if(dbschema_<%=cid%> != null && dbschema_<%=cid%>.trim().length() > 0){
	tableName_<%=cid%> = dbschema_<%=cid%> + "." + tableName_<%=cid%>;
}
<%
	}else if(("DB2").equals(dbType)){
%>
String dbschema_<%=cid%> = (String)globalMap.get("<%=schema%>");

if(dbschema_<%=cid%> != null && dbschema_<%=cid%>.trim().length() > 0){
	tableName_<%=cid%> = "\"" + dbschema_<%=cid%> + "\".\"" + <%=tableName%> + "\"";
}else{
	tableName_<%=cid%> = "\"" + <%=tableName%> + "\"";
}
<%
	}
%>
int nb_column_<%=cid%> = 0;

int column_count_<%=cid%> = 0;

java.sql.Statement stmt2_<%=cid%> = conn_<%=cid%>.createStatement();

java.sql.ResultSet rs_<%=cid %> = stmt2_<%=cid %>.executeQuery("SELECT * from " + tableName_<%=cid%> + " where 1<>1");

java.sql.ResultSetMetaData rsMetaData_<%=cid %> = rs_<%=cid %>.getMetaData();

column_count_<%=cid %> = rsMetaData_<%=cid %>.getColumnCount();

for(int i_<%=cid %> = 1; i_<%=cid %> <= column_count_<%=cid %>; i_<%=cid %>++) {

	String currentColumnName_<%=cid %> = rsMetaData_<%=cid %>.getColumnName(i_<%=cid %>);
	int currentColumnType_<%=cid%> = rsMetaData_<%=cid %>.getColumnType(i_<%=cid %>);
	String currentColumnTypeName_<%=cid%> = rsMetaData_<%=cid %>.getColumnTypeName(i_<%=cid %>);
	int currentColumnPrecision_<%=cid%> = rsMetaData_<%=cid %>.getPrecision(i_<%=cid %>);
	int currentColumnScale_<%=cid%> = rsMetaData_<%=cid %>.getScale(i_<%=cid %>);
	nb_column_<%=cid %>++;
        
	globalMap.put("<%=cid %>_CURRENT_COLUMN", currentColumnName_<%=cid %>);
	globalMap.put("<%=cid %>_CURRENT_COLUMN_TYPE", currentColumnType_<%=cid%>);
	globalMap.put("<%=cid %>_CURRENT_COLUMN_TYPE_NAME", currentColumnTypeName_<%=cid%>);
	globalMap.put("<%=cid %>_CURRENT_COLUMN_PRECISION", currentColumnPrecision_<%=cid%>);
	globalMap.put("<%=cid %>_CURRENT_COLUMN_SCALE", currentColumnScale_<%=cid%>);

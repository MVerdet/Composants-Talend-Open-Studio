<%@ jet 
%>
<%  
//issue 0010346 Parallelization crash with "Drop table if exists and create"
Boolean isParallelize ="true".equalsIgnoreCase(ElementParameterParser.getValue(node, "__PARALLELIZE__"));
if (!isParallelize) {
//end issue 0010346 Parallelization crash with "Drop table if exists and create"
	manager = getManager(dbmsId, cid);   

	if(!("NONE").equals(tableAction)) {

        if(("DROP_CREATE").equals(tableAction)) {
%>            
            java.sql.Statement stmtDrop_<%=cid%> = conn_<%=cid%>.createStatement();
            stmtDrop_<%=cid%>.execute("<%=manager.getDropTableSQL()%>");
            stmtDrop_<%=cid%>.close();
            java.sql.Statement stmtCreate_<%=cid%> = conn_<%=cid%>.createStatement();
            stmtCreate_<%=cid%>.execute("<%=manager.getCreateTableSQL(stmtStructure)%>)");
            stmtCreate_<%=cid%>.close();
<%
        } else if(("CREATE").equals(tableAction)) {
%>
            java.sql.Statement stmtCreate_<%=cid%> = conn_<%=cid%>.createStatement();
            stmtCreate_<%=cid%>.execute("<%=manager.getCreateTableSQL(stmtStructure)%>)");
            stmtCreate_<%=cid%>.close();
<%
        } else if(("CREATE_IF_NOT_EXISTS").equals(tableAction) || ("DROP_IF_EXISTS_AND_CREATE").equals(tableAction)) {
%>
	         
<%			
			 if (ORACLE.equalsIgnoreCase(dbmsId)) {
%>   
				java.sql.DatabaseMetaData dbMetaData_<%=cid%> = conn_<%=cid%>.getMetaData();
	            java.sql.ResultSet rsTable_<%=cid%> = dbMetaData_<%=cid%>.getTables(null, null, null, new String[]{"TABLE"});
	            boolean whetherExist_<%=cid%> = false;
	            while(rsTable_<%=cid%>.next()) {
	                String table_<%=cid%> = rsTable_<%=cid%>.getString("TABLE_NAME");
	                String schema_<%=cid%> = rsTable_<%=cid%>.getString("TABLE_SCHEM");
	                if(table_<%=cid%>.equalsIgnoreCase(<%=table%>) 
	                	&& (schema_<%=cid%>.equalsIgnoreCase(dbschema_<%=cid%>) || dbschema_<%=cid%>.trim().length() ==0)) {
	                    whetherExist_<%=cid%> = true;
	                    break;
	                }
	            }
	            rsTable_<%=cid%>.close();
<%			
			} else {
%>      
            java.sql.DatabaseMetaData dbMetaData_<%=cid%> = conn_<%=cid%>.getMetaData();
            java.sql.ResultSet rsTable_<%=cid%> = dbMetaData_<%=cid%>.getTables(null, null, null, new String[]{"TABLE"});
            boolean whetherExist_<%=cid%> = false;
            while(rsTable_<%=cid%>.next()) {
                String table_<%=cid%> = rsTable_<%=cid%>.getString("TABLE_NAME");
                if(table_<%=cid%>.equalsIgnoreCase(<%=table%>)) {
                    whetherExist_<%=cid%> = true;
                    break;
                }
            }
            rsTable_<%=cid%>.close();
<%
			}
%>

<%
            if(("CREATE_IF_NOT_EXISTS").equals(tableAction)) {
%>
                if(!whetherExist_<%=cid%>) {
                    java.sql.Statement stmtCreate_<%=cid%> = conn_<%=cid%>.createStatement();
                    stmtCreate_<%=cid%>.execute("<%=manager.getCreateTableSQL(stmtStructure)%>)");
                    stmtCreate_<%=cid%>.close();            
                }                
<%
            } else {
%>
                if(whetherExist_<%=cid%>) {
                    java.sql.Statement stmtDrop_<%=cid%> = conn_<%=cid%>.createStatement();
                    stmtDrop_<%=cid%>.execute("<%=manager.getDropTableSQL()%>");
                    stmtDrop_<%=cid%>.close();
                }
                java.sql.Statement stmtCreate_<%=cid%> = conn_<%=cid%>.createStatement();
                stmtCreate_<%=cid%>.execute("<%=manager.getCreateTableSQL(stmtStructure)%>)");
                stmtCreate_<%=cid%>.close();
<%
            }

        } else if(("CLEAR").equals(tableAction)) {
%>
            java.sql.Statement stmtClear_<%=cid%> = conn_<%=cid%>.createStatement();
            stmtClear_<%=cid%>.executeUpdate("<%=manager.getDeleteTableSQL()%>");
            stmtClear_<%=cid%>.close();
<%
        }else if(("TRUNCATE").equals(tableAction)) {
%>
            java.sql.Statement stmtTruncCount_<%=cid%> = conn_<%=cid%>.createStatement();
            java.sql.ResultSet rsTruncCount_<%=cid%> = stmtTruncCount_<%=cid%>.executeQuery("<%=manager.getSelectionSQL()%>");
            java.sql.Statement stmtTrunc_<%=cid%> = conn_<%=cid%>.createStatement();
            stmtTrunc_<%=cid%>.executeUpdate("<%=manager.getTruncateTableSQL()%>");
            while(rsTruncCount_<%=cid%>.next()) {
                deletedCount_<%=cid%> += rsTruncCount_<%=cid%>.getInt(1);
            }
            rsTruncCount_<%=cid%>.close();
            stmtTruncCount_<%=cid%>.close();
            stmtTrunc_<%=cid%>.close();            
<%
        }  
%>
		//in mysql when autoCommit=true don't commit.
		if (! conn_<%=cid%>.getAutoCommit()) {
			conn_<%=cid%>.commit();
		}
<%       
    }
//issue 0010346 Parallelization crash with "Drop table if exists and create"
}
//end issue 0010346 Parallelization crash with "Drop table if exists and create"
%>
